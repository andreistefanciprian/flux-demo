apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  releaseName: monitoring
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: kube-prometheus-stack
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  driftDetection:
    mode: enabled
    ignore:
      # Ignore "validated" annotation which is not inserted during install
      - paths: [ "/metadata/annotations/prometheus-operator-validated" ]
        target:
          kind: PrometheusRule
  valuesFrom:
  - kind: ConfigMap
    name: flux-kube-state-metrics-config
    valuesKey: kube-state-metrics-config.yaml
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    alertmanager:
      enabled: true
      config:
        route:
          group_by: ['alertname', 'component']
          group_wait: 10s
          group_interval: 10s
          repeat_interval: 1h
          receiver: 'default'
          routes:
          - match:
              component: go-demo-app
            receiver: 'go-demo-app-notifications'
        receivers:
        - name: 'default'
          slack_configs:
          - api_url_file: /etc/alertmanager/secrets/slack-webhook/url
            channel: '#k8s-alerts'
            title: 'Alert: {{ .GroupLabels.alertname }}'
            text: |
              {{ range .Alerts }}
              *Alert:* {{ .Annotations.summary }}
              *Description:* {{ .Annotations.description }}
              *Labels:* {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
              {{ end }}
            send_resolved: true
        - name: 'go-demo-app-notifications'
          slack_configs:
          - api_url_file: /etc/alertmanager/secrets/slack-webhook/url
            channel: '#k8s-alerts'
            title: '[Go Demo App] {{ .GroupLabels.alertname }}'
            text: |
              {{ range .Alerts }}
              *Alert:* {{ .Annotations.summary }}
              *Description:* {{ .Annotations.description }}
              *Severity:* {{ .Labels.severity }}
              *Namespace:* {{ .Labels.namespace }}
              {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
              {{ end }}
            send_resolved: true
      alertmanagerSpec:
        secrets:
        - slack-webhook
    prometheus:
      prometheusSpec:
        podMonitorNamespaceSelector: { }
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/component: monitoring
        ruleNamespaceSelector: { }
        ruleSelector:
          matchLabels:
            app.kubernetes.io/component: monitoring
    grafana:
      enabled: true
      defaultDashboardsEnabled: true
      adminUser: admin
      adminPassword: prom-operator
      